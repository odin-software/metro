// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: make.sql

package dbstore

import (
	"context"
	"database/sql"
)

const listMakes = `-- name: ListMakes :many
SELECT name, description, acceleration, top_speed FROM make
`

type ListMakesRow struct {
	Name         string
	Description  string
	Acceleration sql.NullFloat64
	TopSpeed     sql.NullFloat64
}

func (q *Queries) ListMakes(ctx context.Context) ([]ListMakesRow, error) {
	rows, err := q.db.QueryContext(ctx, listMakes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []ListMakesRow
	for rows.Next() {
		var i ListMakesRow
		if err := rows.Scan(
			&i.Name,
			&i.Description,
			&i.Acceleration,
			&i.TopSpeed,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
